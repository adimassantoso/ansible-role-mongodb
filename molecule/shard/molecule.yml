---
dependency:
  name: galaxy
driver:
  name: docker
lint: |
  set -e
  yamllint .
  ansible-lint .
  flake8 library --ignore=E501,E402
platforms:
  - name: config_server1
    image: "geerlingguy/docker-${MOLECULE_DISTRO:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
    groups:
      - config_server
    docker_networks: 
      - name: ${MOLECULE_SCENARIO_NAME}
    publish_all_ports: true
  - name: config_server2
    image: "geerlingguy/docker-${MOLECULE_DISTRO:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
    groups:
      - config_server
    docker_networks: 
      - name: ${MOLECULE_SCENARIO_NAME}
    publish_all_ports: true
  - name: config_server3
    image: "geerlingguy/docker-${MOLECULE_DISTRO:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
    groups:
      - config_server
    docker_networks: 
      - name: ${MOLECULE_SCENARIO_NAME}
    publish_all_ports: true
  - name: shard01
    image: "geerlingguy/docker-${MOLECULE_DISTRO:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
    groups:
      - shard_server
    docker_networks: 
      - name: ${MOLECULE_SCENARIO_NAME}
    publish_all_ports: true
  - name: shard02
    image: "geerlingguy/docker-${MOLECULE_DISTRO:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
    groups:
      - shard_server
    docker_networks: 
      - name: ${MOLECULE_SCENARIO_NAME}
    publish_all_ports: true
  - name: mongos
    image: "geerlingguy/docker-${MOLECULE_DISTRO:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
    groups:
      - mongos
    docker_networks: 
      - name: ${MOLECULE_SCENARIO_NAME}
    publish_all_ports: true
provisioner:
  name: ansible
  config_options:
    defaults:
      pipelining: true
  log: true
  playbooks:
    converge: ${MOLECULE_PLAYBOOK:-../shard/converge.yml}
    prepare:  ${MOLECULE_PLAYBOOK:-../default/prepare.yml}
  env:
    MONGODB_VERSION: ${MONGODB_VERSION:-4.4}
    MONGODB_PACKAGE: ${MONGODB_PACKAGE:-mongodb-org}
    AUTH_STATE: ${AUTH_STATE:-disabled}
    REPLICASET: ${REPLICASET:-testrs}
  inventory:
    host_vars:
      config_server1:
        ansible_python_interpreter: auto_silent
        mongodb_master: true
        mongodb_replication_params:
          - host_name: "{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}"
        mongodb_sharding_enabled: true
        mongodb_sharding_cluster_role: configsvr
        mongodb_replication_replset: cfgsvr_replset
      config_server2:
        ansible_python_interpreter: auto_silent
        mongodb_replication_params:
          - host_name: "{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}"
        mongodb_sharding_enabled: true
        mongodb_sharding_cluster_role: configsvr
        mongodb_replication_replset: cfgsvr_replset
      config_server3:
        ansible_python_interpreter: auto_silent
        mongodb_replication_params:
          - host_name: "{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}"
        mongodb_sharding_enabled: true
        mongodb_sharding_cluster_role: configsvr
        mongodb_replication_replset: cfgsvr_replset
      shard01:
        ansible_python_interpreter: auto_silent
        mongodb_replication_params:
          - host_name: "{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}"
        mongodb_sharding_enabled: true
        mongodb_sharding_cluster_role: shardsvr
        mongodb_login_host: "{{ hostvars['shard01'].ansible_default_ipv4.address }}"
        mongodb_replication_replset: shard01
      shard02:
        ansible_python_interpreter: auto_silent
        mongodb_replication_params:
          - host_name: "{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}"
        mongodb_sharding_enabled: true
        mongodb_sharding_cluster_role: shardsvr
        mongodb_login_host: "{{ hostvars['shard02'].ansible_default_ipv4.address }}"
        mongodb_replication_replset: shard02
      mongos:
        ansible_python_interpreter: auto_silent
        mongodb_use_mongos: true
        config_server_replset_name: cfgsvr_replset
        config_server_primary_ip: "{{ hostvars['config_server1'].ansible_default_ipv4.address }}"
verifier:
  name: ansible
